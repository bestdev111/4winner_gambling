{"version":3,"sources":["mobile/pages/results/mResults.js"],"names":["MResults","dispatch","useDispatch","_useState","useState","_useState2","Object","_var_www_www_root_data_www_volley90_com_public_frontend_4winner_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","date","setDate","_useState3","_useState4","dateList","setDateList","_useState5","_useState6","betradarSportType","setBetradarSportType","_useState7","_useState8","category","setCategory","_useState9","_useState10","leagueList","setLeagueList","getResultList","useSelector","state","mobileSportsReducers","getResult","useEffectOnce","getResultData","useEffect","getDate","temp","data","length","forEach","item","includes","BASE","leagueName","brCategory","name","push","undefined","todayDay","Date","getFullYear","getMonth","obj","dateListTemp","daysAgo","getTime","i","day","year","month","title","param","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_components__WEBPACK_IMPORTED_MODULE_4__","className","onChange","e","target","value","map","index","key","league","homeTeamName","matchResults","interimResults","fullTimeResult","awayTeamName"],"mappings":"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","file":"static/js/10.d7964fc5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffectOnce } from 'usehooks-ts';\nimport { MobileNavbar, MobileFooter } from '../../components'\nimport { getResult } from '../../../store/actions/mobileSportsActions';\nimport './mResults.css'\n\nfunction MResults() {\n\n    const dispatch = useDispatch()\n    const [date, setDate] = useState();\n    const [dateList, setDateList] = useState();\n    const [betradarSportType, setBetradarSportType] = useState(1);\n    const [category, setCategory] = useState();\n    const [leagueList, setLeagueList] = useState([]);\n\n    const getResultList = useSelector(state => state.mobileSportsReducers.getResult);\n    const dateSet = e => {\n        setDate(e.target.value)\n    }\n    const sportsTypeSet = e => {\n        setBetradarSportType(e.target.value);\n    }\n    const categorySet = e => {\n        setCategory(e.target.value)\n    }\n    useEffectOnce(() => {\n        getResultData();\n    })\n    useEffect(() => {\n        getResultData();\n    }, [date, betradarSportType, category])\n    useEffect(() => {\n        getDate()\n        let temp = []\n        if (getResultList.data && getResultList.data.length > 0) {\n            getResultList.data.forEach(item => {\n                if (temp.includes(item.BASE.leagueName + '-' + item.BASE.brCategory.name) === false) {\n                    temp.push(item.BASE.leagueName + '-' + item.BASE.brCategory.name);\n                }\n            });\n        }\n        setLeagueList(temp);\n    }, [getResultList])\n    const getResultData = () => {\n        if (date === undefined) {\n            const todayDay = new Date()\n            setDate(todayDay.getFullYear() + '-' + (todayDay.getMonth() + 1) + '-' + todayDay.getDate());\n        }\n        const obj = {\n            date: date,\n            betradarSportType: betradarSportType,\n            category: category\n        }\n        dispatch(getResult(obj))\n    }\n    const getDate = () => {\n        let dateListTemp = [];\n        const todayDay = new Date()\n        const daysAgo = new Date(todayDay.getTime());\n        for (let i = 0; i < 12; i++) {\n            daysAgo.setDate(todayDay.getDate() - i);\n            const day = daysAgo.getDate()\n            const year = daysAgo.getFullYear();\n            const month = daysAgo.getMonth() + 1;\n            let title = day + '.' + month + '.' + year\n            const param = year + '-' + month + '-' + day\n            title = i === 0 ? 'Today' : i === 1 ? 'Yesterday' : title;\n            let obj = {\n                title: title,\n                param: param\n            }\n            dateListTemp.push(obj)\n        }\n        setDateList(dateListTemp)\n    }\n    return (\n        <>\n            <MobileNavbar />\n            <div className='results'>\n                <div className='results-header'>\n                    <select className='date' onChange={dateSet}>\n                        {dateList ? dateList.map((item, index) =>\n                            <option key={index} value={item.param}>{item.title}</option>\n                        ) : null}\n                    </select>\n                    <select onChange={sportsTypeSet}>\n                        <option value='1'>Football</option>\n                        <option value='2'>Basketball</option>\n                        <option value='3'>Baseball</option>\n                        <option value='4'>IceHockey</option>\n                        <option value='5'>Tennis</option>\n                        <option value='6'>Handball</option>\n                        <option value='10'>Boxing</option>\n                        <option value='12'>Rugby</option>\n                        <option value='16'>American Football</option>\n                        <option value='19'>Snooker</option>\n                        <option value='22'>Darts</option>\n                        <option value='23'>Volleyball</option>\n                        <option value='29'>Futsol</option>\n                    </select>\n                    <select onChange={categorySet}>\n                        <option value={1}>All</option>\n                    </select>\n                </div>\n                <div className='results-body'>\n                    {leagueList ? leagueList.map((league, i) =>\n                        <div key={i}>\n                            <div className='league-title'>{league}</div>\n                            {getResultList.data ? getResultList.data.map((item, index) =>\n                                league === item.BASE.leagueName + '-' + item.BASE.brCategory.name ?\n                                    <div className='finished-match-item' key={index}>\n                                        <div className='team'>{item.BASE.homeTeamName}</div>\n                                        <div className='score'>\n                                            <p>{item.BASE.matchResults.interimResults !== null ? item.BASE.matchResults.interimResults : \"-:-\"}</p>\n                                            <p>{item.BASE.matchResults.fullTimeResult !== null ? item.BASE.matchResults.fullTimeResult : \"-:-\"}</p>\n                                        </div>\n                                        <div className='team'>{item.BASE.awayTeamName}</div>\n                                    </div>\n                                    : null\n                            ) : null}\n                        </div>\n                    ) : null}\n                </div>\n            </div>\n            <MobileFooter />\n        </>\n    );\n};\nexport default MResults;"],"sourceRoot":""}