{"version":3,"sources":["mobile/pages/highlights/mHighlights.js"],"names":["MHighlights","props","dispatch","useDispatch","prevScrollY","useRef","_useState","useState","_useState2","Object","_var_www_www_root_data_www_volley90_com_public_frontend_4winner_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","tipTypes","setTipTypes","_useState3","_useState4","liveLeagueType","setLiveLeagueType","_useState5","_useState6","willLeagueType","setWillLeagueType","_useState7","_useState8","openOddDetailVal","setOpenOddDetailVal","_useState9","_useState10","selectMatchId","setSelectMatchId","_useState11","_useState12","hideSubNav","setHideSubNav","_useState13","_useState14","timer","setTimer","_useState15","_useState16","isMounted","setIsMounted","_useState17","_useState18","liveMatches","setLiveMatches","_useState19","_useState20","willMatches","setWillMatches","_useState21","_useState22","onlyLive","setOnlyLive","_useState23","_useState24","sportTypeId","setSportTypeId","_useState25","_useState26","betradarCategoryId","_useState27","_useState28","setLeagueName","_useState29","_useState30","matchState","_useState31","_useState32","startIndex","_useState33","_useState34","orderByLeague","get_Matches","useSelector","state","mobileSportsReducers","getMatches","SportTypeList","getTypeList","dataFetch","id","localStorage","getItem","leagueName","betradarCategoryId1","undefined","leagueNameRadarId","obj","getAllMatches","getTopLeague","getLeagueSorts","clearTimeout","setTimeout","useEffect","useEffectOnce","tempType1","tempType2","length","live_leagues","data","matches","filter","item","betState","will_leagues","forEach","includes","match","league","push","handleScroll","currentScrollY","window","scrollY","current","addEventListener","passive","removeEventListener","getTipTypes","index","openDetailOdd","getTime","param","t","timestamp","Date","virtualStartTime","Math","round","dateString","europeanStartTime","userOffset","getTimezoneOffset","localDate","utcDate","getHours","getMinutes","getDate","date","todayDay","matchDay","matchMonth","getMonth","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_mobile_components__WEBPACK_IMPORTED_MODULE_4__","sportActiveFunc","setItem","_utils__WEBPACK_IMPORTED_MODULE_6__","show","duration","parentCallback","replaceAll","className","tipTypesList","map","key","index1","name","i","matchId","homeTeam","awayTeam","matchResults","score","scoreCache","redCard","redCards","isTop","odds","time","willBeLive"],"mappings":"0MAoVeA,UA9Tf,SAAqBC,GACjB,IAAMC,EAAWC,cACXC,EAAcC,iBAAO,GAAGC,EACEC,qBAAUC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAnCK,EAAQH,EAAA,GAAEI,EAAWJ,EAAA,GAAAK,EACgBN,mBAAS,IAAGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAAG,EACIV,mBAAS,IAAGW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAAjDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAAG,EACQd,oBAAS,GAAMe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAAAG,EACFlB,qBAAUmB,EAAAjB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAA7CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAAAG,EACFtB,oBAAS,GAAKuB,EAAArB,OAAAC,EAAA,EAAAD,CAAAoB,EAAA,GAA3CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAAAG,EACN1B,mBAAS,MAAK2B,EAAAzB,OAAAC,EAAA,EAAAD,CAAAwB,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAAAG,EACY9B,oBAAS,GAAM+B,EAAA7B,OAAAC,EAAA,EAAAD,CAAA4B,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAAAG,EACQlC,mBAAS,MAAKmC,EAAAjC,OAAAC,EAAA,EAAAD,CAAAgC,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAAAG,EACItC,mBAAS,MAAKuC,EAAArC,OAAAC,EAAA,EAAAD,CAAAoC,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAAAG,EACF1C,oBAAS,GAAM2C,EAAAzC,OAAAC,EAAA,EAAAD,CAAAwC,EAAA,GAAxCE,GAAQD,EAAA,GAAEE,GAAWF,EAAA,GAAAG,GAEU9C,mBAAS,GAAE+C,GAAA7C,OAAAC,EAAA,EAAAD,CAAA4C,GAAA,GAA1CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAAAG,GACkBlD,mBAAS,GAAEmD,GAAAjD,OAAAC,EAAA,EAAAD,CAAAgD,GAAA,GAAxDE,GAAkBD,GAAA,GAAuBE,IAAAF,GAAA,GACZnD,sBAAUsD,GAAApD,OAAAC,EAAA,EAAAD,CAAAmD,GAAA,GAA3BE,IAAFD,GAAA,GAAeA,GAAA,IAAAE,GACIxD,mBAAS,WAAUyD,GAAAvD,OAAAC,EAAA,EAAAD,CAAAsD,GAAA,GAAhDE,GAAUD,GAAA,GAAeE,IAAAF,GAAA,GACIzD,mBAAS,IAAE4D,GAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,GAAA,GAAxCE,GAAUD,GAAA,GAAeE,IAAAF,GAAA,GACU5D,oBAAS,IAAM+D,GAAA7D,OAAAC,EAAA,EAAAD,CAAA4D,GAAA,GAAlDE,GAAaD,GAAA,GAEdE,IAFgCF,GAAA,GAElBG,YAChB,SAACC,GAAK,OAAKA,EAAMC,qBAAqBC,cAEpCC,GAAgBJ,YAClB,SAACC,GAAK,OAAKA,EAAMC,qBAAqBG,cAEpCC,GAAY,SAAZA,IACF,IAAIC,EAAKC,aAAaC,QAAQ,eAC1BC,EAAaF,aAAaC,QAAQ,cAClCE,EAAsBzB,GAEP,OAAfwB,QACeE,IAAfF,GACe,KAAfA,IAEAC,EAAsBE,IAAkBH,IAE5C,IAAII,EAAM,CACNhC,YAFJyB,OAAYK,IAAPL,EAAmB,EAAIA,EAGxBrB,mBAAoByB,EACpBD,WAAYA,EACZlB,WAAYA,GACZG,WAAYA,GACZG,cAAeA,IAEnBrE,EAAS0E,YAAWW,IACpBrF,EAASsF,eACTtF,EAASuF,eACTvF,EAASwF,eACTxF,EAAS4E,eACTa,aAAaxD,GACbC,EAASwD,WAAWb,EAAW,OAEnCc,oBAAU,WACDtD,IACDwC,KACAvC,GAAa,MAGrBsD,YAAc,WAKVf,OAMJc,oBAAU,WACN,IAAIE,EAAY,GACZC,EAAY,GAChB,GAAIxB,IAAsC,IAAvBA,GAAYyB,OAAc,CACzC,IAAIC,EAAe1B,GAAY2B,KAAKC,QAAQC,OACxC,SAACC,GAAI,OAAKA,EAAKC,SAAStC,YAAc,IAEtCuC,EAAehC,GAAY2B,KAAKC,QAAQC,OACxC,SAACC,GAAI,OAAKA,EAAKC,SAAStC,WAAa,IAEzCrB,EAAesD,GACflD,EAAewD,GACfN,EAAaO,QAAQ,SAACH,GACbP,EAAUW,SAASJ,EAAKK,MAAMC,SAC/Bb,EAAUc,KAAKP,EAAKK,MAAMC,UAGlCJ,EAAaC,QAAQ,SAACH,GACbN,EAAUU,SAASJ,EAAKK,MAAMC,SAC/BZ,EAAUa,KAAKP,EAAKK,MAAMC,UAGlC5F,EAAkB+E,GAClB3E,EAAkB4E,KAEvB,CAACxB,KACJqB,oBAAU,WACF5F,GAASA,EAAMkD,UACfC,GAAYnD,EAAMkD,WAEvB,CAAClD,IACJ4F,oBAAU,WAEN,IAAMiB,EAAe,WACjB,IAAMC,EAAiBC,OAAOC,QAC1B7G,EAAY8G,QAAUH,EAAiB,IAAMhF,GAC7CC,GAAc,GAEd5B,EAAY8G,QAAUH,IAAmBhF,GACzCC,GAAc,GAElB5B,EAAY8G,QAAUH,GAI1B,OAFAC,OAAOG,iBAAiB,SAAUL,EAAc,CAAEM,SAAS,IAEpD,kBAAMJ,OAAOK,oBAAoB,SAAUP,KACnD,CAAC/E,IAEJ,IAAMuF,GAAc,SAACC,GACjB3G,EAAY2G,IAOVC,GAAgB,SAACD,EAAOvC,GAC1BxD,EAAoB+F,GACpB3F,EAAiBoD,IAEfyC,GAAU,SAACC,GACb,IAIIC,EAJAC,EAAY,IAAIC,KAAKH,EAAMnB,SAASqB,WAAWH,UAC/CK,EAAmB,IAAID,KACvBH,EAAMnB,SAASuB,kBACjBL,UAEF,GAAyB,IAArBK,EACAH,GAAKC,EAAYE,GAAgB,IACjCH,EAAII,KAAKC,MAAML,EAAI,SAAY,EAAII,KAAKC,MAAML,EAAI,QAAW,MAC1D,CACH,IAAMM,EAAaP,EAAMQ,kBACnBC,GAAa,IAAIN,MAAOO,oBAAsB,GAC9CC,EAAY,IAAIR,KAAKI,GACrBK,EAAU,IAAIT,KAChBQ,EAAUZ,UAA+B,IAAlBU,EAAa,GAAU,GAAK,KAOvDR,EALU,IAAIE,KAAKS,GAASC,WAKpB,KAH+B,IAAnC,IAAIV,KAAKS,GAASE,aACZ,KACA,IAAIX,KAAKS,GAASE,cAGhC,OAAOb,GAELc,GAAU,SAACf,GACb,IAAIgB,EACET,EAAaP,EAAMQ,kBACnBC,GAAa,IAAIN,MAAOO,oBAAsB,GAC9CC,EAAY,IAAIR,KAAKI,GACrBK,EAAU,IAAIT,KAChBQ,EAAUZ,UAA+B,IAAlBU,EAAa,GAAU,GAAK,KAGjDQ,GAAW,IAAId,MAAOY,UACtBG,EAAW,IAAIf,KAAKS,GAASG,UAC7BI,EAAa,IAAIhB,KAAKS,GAASQ,WAUrC,OATIH,IAAaC,IACbF,EAAO,SAEPE,IAAaD,EAAW,IACxBD,EAAO,YAEPE,EAAWD,EAAW,IACtBD,EAAOE,EAAW,IAAMC,GAErBH,GAEX,OACIK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAY,MACbJ,EAAAC,EAAAC,cAACE,EAAA,EAAgB,CACbC,gBAAiB,SAAC7B,GAAK,OApHX,SAACA,GACrB/D,GAAe+D,GACftC,aAAaoE,QAAQ,cAAe9B,GAkHA6B,CAAgB7B,MAE/B,IAAhBhE,IAAqBxB,EAClBgH,EAAAC,EAAAC,cAACK,EAAA,EAAS,CAACC,KAAK,OAAOC,SAAU,KAC7BT,EAAAC,EAAAC,cAACE,EAAA,EAAoB,CACjBM,eAAgBnC,GAChB3G,SAAU2G,GACVnC,WApEE,SAACA,GACnBA,EAAaA,EAAWuE,WAAW,IAAK,OACxCzE,aAAaoE,QAAQ,aAAclE,GACnCrB,GAAcqB,OAqEN4D,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,MAEJH,EAAAC,EAAAC,cAAA,OACIU,UACoB,IAAhBpG,GAAoB,uBAAyB,aAGjDwF,EAAAC,EAAAC,cAAA,OAAKU,UAAU,YACXZ,EAAAC,EAAAC,cAAA,OAAKU,UAAU,aACGtE,IAAb1E,EACKiJ,IAAajJ,GAAUkJ,IAAI,SAACvD,EAAMiB,GAAK,OACnCwB,EAAAC,EAAAC,cAAA,KAAGa,IAAKvC,GAAQjB,KAEpB,OAGdyC,EAAAC,EAAAC,cAAA,OAAKU,UAAU,UACV5I,EACKA,EAAe8I,IAAI,SAACjD,EAAQmD,GAAM,OAC9BhB,EAAAC,EAAAC,cAAA,OAAKa,IAAKC,GACNhB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,kBACV9E,GAAcgF,IAAI,SAACvD,GAAI,OACpBA,EAAK/C,cAAgBA,GACf+C,EAAK0D,KACL,OACT,IACCpD,GAELjE,EAAYkH,IAAI,SAAClD,EAAOsD,GAAC,OACtBrD,IAAWD,EAAMA,MAAMC,OACnBmC,EAAAC,EAAAC,cAAA,OAAKa,IAAKG,GACNlB,EAAAC,EAAAC,cAACE,EAAA,EAAa,CACV5F,YAAaA,GACb5C,SAAUA,EACV6G,cAAeA,GACf0C,QAASvD,EAAM3B,GACfmF,SACIxD,EAAMA,MAAMwD,SAEhBC,SACIzD,EAAMA,MAAMyD,SAEhBC,aACI1D,EAAM0D,aAEVC,MAAO3D,EAAM4D,WACbtG,WACI0C,EAAMJ,SAAStC,WAEnBuG,QAAS7D,EAAM8D,SACflE,SAAUI,EAAMJ,SAChBmE,MAAO/D,EAAM+D,MACbC,KAAMhE,EAAMJ,SACZqE,KAAMnD,GAAQd,GACd+B,KAAMD,GAAQ9B,MAGtB,UAIhB,MACJxD,IAAYhC,EACRA,EAAe0I,IAAI,SAACjD,EAAQmD,GAAM,OAC9BhB,EAAAC,EAAAC,cAAA,OAAKa,IAAKC,GACNhB,EAAAC,EAAAC,cAAA,OAAKU,UAAU,kBACV9E,GAAcgF,IAAI,SAACvD,GAAI,OACpBA,EAAK/C,cAAgBA,GACf+C,EAAK0D,KACL,OACT,IACCpD,GAEL7D,EAAY8G,IAAI,SAAClD,EAAOsD,GAAC,OACtBrD,IAAWD,EAAMA,MAAMC,OACnBmC,EAAAC,EAAAC,cAAA,OAAKa,IAAKG,GACNlB,EAAAC,EAAAC,cAACE,EAAA,EAAa,CACV5F,YAAaA,GACb5C,SAAUA,EACV6G,cAAeA,GACf0C,QAASvD,EAAM3B,GACfmF,SACIxD,EAAMA,MAAMwD,SAEhBC,SACIzD,EAAMA,MAAMyD,SAEhBC,aACI1D,EAAM0D,aAEVC,MAAO3D,EAAM4D,WACbC,QAAS7D,EAAM8D,SACflE,SAAUI,EAAMJ,SAChBsE,WACIlE,EAAMA,MAAMkE,WAEhB5G,WACI0C,EAAMJ,SAAStC,WAEnByG,MAAO/D,EAAM+D,MACbE,KAAMnD,GAAQd,GACd+B,KAAMD,GAAQ9B,MAGtB,UAIhB,OAGdoC,EAAAC,EAAAC,cAACE,EAAA,EAAY,MACZ5H,EACGwH,EAAAC,EAAAC,cAACE,EAAA,EAAc,CACX3B,cAAeA,GACf0C,QAASvI,IAGboH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA","file":"static/js/9.95370b9d.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffectOnce } from \"usehooks-ts\";\nimport {\n    MobileNavbar,\n    FootballLeagueNavbar,\n    SportsTypeNavbar,\n    MobileFooter,\n    LeagueContent,\n    OddDetailPanel,\n} from \"../../../mobile/components\";\nimport {\n    getMatches,\n    getAllMatches,\n    getTopLeague,\n    getLeagueSorts,\n    getTypeList,\n} from \"../../../store/actions/mobileSportsActions\";\nimport { FadeInOut } from \"../../../utils\";\nimport { tipTypesList, leagueNameRadarId } from \"../../../utils/dataUtils\";\nimport \"./mHighlights.css\";\n\nfunction MHighlights(props) {\n    const dispatch = useDispatch();\n    const prevScrollY = useRef(0);\n    const [tipTypes, setTipTypes] = useState();\n    const [liveLeagueType, setLiveLeagueType] = useState([]);\n    const [willLeagueType, setWillLeagueType] = useState([]);\n    const [openOddDetailVal, setOpenOddDetailVal] = useState(false);\n    const [selectMatchId, setSelectMatchId] = useState();\n    const [hideSubNav, setHideSubNav] = useState(true);\n    const [timer, setTimer] = useState(null);\n    const [isMounted, setIsMounted] = useState(false);\n    const [liveMatches, setLiveMatches] = useState(null);\n    const [willMatches, setWillMatches] = useState(null);\n    const [onlyLive, setOnlyLive] = useState(false);\n\n    const [sportTypeId, setSportTypeId] = useState(1);\n    const [betradarCategoryId, setBetradarCategoryId] = useState(0);\n    const [leagueName, setLeagueName] = useState();\n    const [matchState, setMatchState] = useState(\"topOdds\");\n    const [startIndex, setStartIndex] = useState(0);\n    const [orderByLeague, setOrderByLeague] = useState(false);\n\n    const get_Matches = useSelector(\n        (state) => state.mobileSportsReducers.getMatches\n    );\n    const SportTypeList = useSelector(\n        (state) => state.mobileSportsReducers.getTypeList\n    );\n    const dataFetch = () => {\n        let id = localStorage.getItem(\"sportTypeId\");\n        let leagueName = localStorage.getItem(\"leagueName\");\n        let betradarCategoryId1 = betradarCategoryId;\n        if (\n            leagueName !== null &&\n            leagueName !== undefined &&\n            leagueName !== \"\"\n        )\n            betradarCategoryId1 = leagueNameRadarId[leagueName];\n        id = id === undefined ? 1 : id;\n        let obj = {\n            sportTypeId: id,\n            betradarCategoryId: betradarCategoryId1,\n            leagueName: leagueName,\n            matchState: matchState,\n            startIndex: startIndex,\n            orderByLeague: orderByLeague,\n        };\n        dispatch(getMatches(obj));\n        dispatch(getAllMatches());\n        dispatch(getTopLeague());\n        dispatch(getLeagueSorts());\n        dispatch(getTypeList());\n        clearTimeout(timer);\n        setTimer(setTimeout(dataFetch, 5000));\n    };\n    useEffect(() => {\n        if (!isMounted) {\n            dataFetch();\n            setIsMounted(true);\n        }\n    });\n    useEffectOnce(() => {\n        // if(localStorage.getItem('sportTypeId')){\n        //     console.log('setted!!!!', localStorage.getItem('sportTypeId'));\n        //     setSportTypeId(localStorage.getItem('sportTypeId'));\n        // }\n        dataFetch();\n    });\n    const sportActiveFunc = (index) => {\n        setSportTypeId(index);\n        localStorage.setItem(\"sportTypeId\", index);\n    };\n    useEffect(() => {\n        let tempType1 = [];\n        let tempType2 = [];\n        if (get_Matches && get_Matches.length !== 0) {\n            let live_leagues = get_Matches.data.matches.filter(\n                (item) => item.betState.matchState >= 3\n            );\n            let will_leagues = get_Matches.data.matches.filter(\n                (item) => item.betState.matchState < 3\n            );\n            setLiveMatches(live_leagues);\n            setWillMatches(will_leagues);\n            live_leagues.forEach((item) => {\n                if (!tempType1.includes(item.match.league)) {\n                    tempType1.push(item.match.league);\n                }\n            });\n            will_leagues.forEach((item) => {\n                if (!tempType2.includes(item.match.league)) {\n                    tempType2.push(item.match.league);\n                }\n            });\n            setLiveLeagueType(tempType1);\n            setWillLeagueType(tempType2);\n        }\n    }, [get_Matches]);\n    useEffect(() => {\n        if (props && props.onlyLive) {\n            setOnlyLive(props.onlyLive);\n        }\n    }, [props]);\n    useEffect(() => {\n        //football navbar with scroll\n        const handleScroll = () => {\n            const currentScrollY = window.scrollY;\n            if (prevScrollY.current < currentScrollY - 15 && hideSubNav) {\n                setHideSubNav(false);\n            }\n            if (prevScrollY.current > currentScrollY && !hideSubNav) {\n                setHideSubNav(true);\n            }\n            prevScrollY.current = currentScrollY;\n        };\n        window.addEventListener(\"scroll\", handleScroll, { passive: true });\n\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, [hideSubNav]);\n\n    const getTipTypes = (index) => {\n        setTipTypes(index);\n    };\n    const getLeagueName = (leagueName) => {\n        leagueName = leagueName.replaceAll(\" \", \"%20\");\n        localStorage.setItem(\"leagueName\", leagueName);\n        setLeagueName(leagueName);\n    };\n    const openDetailOdd = (index, id) => {\n        setOpenOddDetailVal(index);\n        setSelectMatchId(id);\n    };\n    const getTime = (param) => {\n        let timestamp = new Date(param.betState.timestamp).getTime();\n        let virtualStartTime = new Date(\n            param.betState.virtualStartTime\n        ).getTime();\n        let t;\n        if (virtualStartTime !== 0) {\n            t = (timestamp - virtualStartTime) / (60 * 1000);\n            t = Math.round(t + 0.96442) >= 0 ? Math.round(t + 0.96442) : 0;\n        } else {\n            const dateString = param.europeanStartTime;\n            const userOffset = new Date().getTimezoneOffset() / 60;\n            const localDate = new Date(dateString);\n            const utcDate = new Date(\n                localDate.getTime() - (userOffset + 1) * 60 * 60 * 1000\n            );\n            const h = new Date(utcDate).getHours();\n            const m =\n                new Date(utcDate).getMinutes() === 0\n                    ? \"00\"\n                    : new Date(utcDate).getMinutes();\n            t = h + \":\" + m;\n        }\n        return t;\n    };\n    const getDate = (param) => {\n        let date;\n        const dateString = param.europeanStartTime;\n        const userOffset = new Date().getTimezoneOffset() / 60;\n        const localDate = new Date(dateString);\n        const utcDate = new Date(\n            localDate.getTime() - (userOffset + 1) * 60 * 60 * 1000\n        );\n\n        const todayDay = new Date().getDate();\n        const matchDay = new Date(utcDate).getDate();\n        const matchMonth = new Date(utcDate).getMonth();\n        if (todayDay === matchDay) {\n            date = \"Today\";\n        }\n        if (matchDay === todayDay + 1) {\n            date = \"Tomorrow\";\n        }\n        if (matchDay > todayDay + 1) {\n            date = matchDay + \".\" + matchMonth;\n        }\n        return date;\n    };\n    return (\n        <>\n            <MobileNavbar />\n            <SportsTypeNavbar\n                sportActiveFunc={(index) => sportActiveFunc(index)}\n            />\n            {sportTypeId === 1 && hideSubNav ? (\n                <FadeInOut show=\"true\" duration={400}>\n                    <FootballLeagueNavbar\n                        parentCallback={getTipTypes}\n                        tipTypes={getTipTypes}\n                        leagueName={getLeagueName}\n                    />\n                </FadeInOut>\n            ) : (\n                <></>\n            )}\n            <div\n                className={\n                    sportTypeId === 1 ? \"m_content custom-top\" : \"m_content\"\n                }\n            >\n                <div className=\"m_header\">\n                    <div className=\"odds\">\n                        {tipTypes !== undefined\n                            ? tipTypesList[tipTypes].map((item, index) => (\n                                  <p key={index}>{item}</p>\n                              ))\n                            : null}\n                    </div>\n                </div>\n                <div className=\"m_body\">\n                    {liveLeagueType\n                        ? liveLeagueType.map((league, index1) => (\n                              <div key={index1}>\n                                  <div className=\"league-content\">\n                                      {SportTypeList.map((item) =>\n                                          item.sportTypeId === sportTypeId\n                                              ? item.name\n                                              : null\n                                      )}\n                                      /{league}\n                                  </div>\n                                  {liveMatches.map((match, i) =>\n                                      league === match.match.league ? (\n                                          <div key={i}>\n                                              <LeagueContent\n                                                  sportTypeId={sportTypeId}\n                                                  tipTypes={tipTypes}\n                                                  openDetailOdd={openDetailOdd}\n                                                  matchId={match.id}\n                                                  homeTeam={\n                                                      match.match.homeTeam\n                                                  }\n                                                  awayTeam={\n                                                      match.match.awayTeam\n                                                  }\n                                                  matchResults={\n                                                      match.matchResults\n                                                  }\n                                                  score={match.scoreCache}\n                                                  matchState={\n                                                      match.betState.matchState\n                                                  }\n                                                  redCard={match.redCards}\n                                                  betState={match.betState}\n                                                  isTop={match.isTop}\n                                                  odds={match.betState}\n                                                  time={getTime(match)}\n                                                  date={getDate(match)}\n                                              />\n                                          </div>\n                                      ) : null\n                                  )}\n                              </div>\n                          ))\n                        : null}\n                    {!onlyLive && willLeagueType\n                        ? willLeagueType.map((league, index1) => (\n                              <div key={index1}>\n                                  <div className=\"league-content\">\n                                      {SportTypeList.map((item) =>\n                                          item.sportTypeId === sportTypeId\n                                              ? item.name\n                                              : null\n                                      )}\n                                      /{league}\n                                  </div>\n                                  {willMatches.map((match, i) =>\n                                      league === match.match.league ? (\n                                          <div key={i}>\n                                              <LeagueContent\n                                                  sportTypeId={sportTypeId}\n                                                  tipTypes={tipTypes}\n                                                  openDetailOdd={openDetailOdd}\n                                                  matchId={match.id}\n                                                  homeTeam={\n                                                      match.match.homeTeam\n                                                  }\n                                                  awayTeam={\n                                                      match.match.awayTeam\n                                                  }\n                                                  matchResults={\n                                                      match.matchResults\n                                                  }\n                                                  score={match.scoreCache}\n                                                  redCard={match.redCards}\n                                                  betState={match.betState}\n                                                  willBeLive={\n                                                      match.match.willBeLive\n                                                  }\n                                                  matchState={\n                                                      match.betState.matchState\n                                                  }\n                                                  isTop={match.isTop}\n                                                  time={getTime(match)}\n                                                  date={getDate(match)}\n                                              />\n                                          </div>\n                                      ) : null\n                                  )}\n                              </div>\n                          ))\n                        : null}\n                </div>\n            </div>\n            <MobileFooter />\n            {openOddDetailVal ? (\n                <OddDetailPanel\n                    openDetailOdd={openDetailOdd}\n                    matchId={selectMatchId}\n                />\n            ) : (\n                <></>\n            )}\n        </>\n    );\n}\nexport default MHighlights;\n"],"sourceRoot":""}