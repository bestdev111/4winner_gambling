{"version":3,"sources":["mobile/pages/home/mHome.js","mobile/pages/live/mLive.js"],"names":["MHome","props","dispatch","useDispatch","prevScrollY","useRef","_useState","useState","_useState2","Object","_var_www_www_root_data_www_volley90_com_public_frontend_4winner_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","tipTypes","setTipTypes","_useState3","_useState4","liveLeagueType","setLiveLeagueType","_useState5","_useState6","willLeagueType","setWillLeagueType","_useState7","_useState8","openOddDetailVal","setOpenOddDetailVal","_useState9","_useState10","selectMatchId","setSelectMatchId","_useState11","_useState12","selectMatchDate","setSelectMatchDate","_useState13","_useState14","selectMatchTime","setSelectMatchTime","_useState15","_useState16","hideSubNav","setHideSubNav","_useState17","_useState18","timer","setTimer","_useState19","_useState20","isMounted","setIsMounted","_useState21","_useState22","liveMatches","setLiveMatches","_useState23","_useState24","willMatches","setWillMatches","_useState25","_useState26","liveBetRadarName","setLiveBetRadarName","_useState27","_useState28","willBetRadarName","setWillBetRadarName","_useState29","_useState30","onlyLive","setOnlyLive","_useState31","_useState32","sportTypeId","setSportTypeId","_useState33","_useState34","betradarCategoryId","_useState35","_useState36","setLeagueName","_useState37","_useState38","matchState","_useState39","_useState40","startIndex","_useState41","_useState42","orderByLeague","get_Matches","useSelector","state","mobileSportsReducers","getMatches","SportTypeList","getTypeList","dataFetch","id","localStorage","getItem","betradarCategoryId1","undefined","setItem","leagueName","leagueNameRadarId","obj","getAllMatches","getTopLeague","getLeagueSorts","clearTimeout","setTimeout","useEffect","useEffectOnce","tempType1","tempBetRadar1","tempType2","tempBetRadar2","length","live_leagues","data","matches","filter","item","betState","will_leagues","forEach","includes","match","league","push","betradarCategory","name","handleScroll","currentScrollY","window","scrollY","current","addEventListener","passive","removeEventListener","getTipTypes","index","openDetailOdd","date","time","getTime","param","t","timestamp","Date","virtualStartTime","Math","round","dateString","europeanStartTime","userOffset","getTimezoneOffset","localDate","utcDate","getHours","getMinutes","getDate","todayDay","matchDay","matchMonth","getMonth","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Fragment","_mobile_components__WEBPACK_IMPORTED_MODULE_4__","sportActiveFunc","_utils__WEBPACK_IMPORTED_MODULE_6__","show","duration","parentCallback","replaceAll","className","tipTypesList","map","key","index1","i","matchId","homeTeam","awayTeam","matchResults","score","scoreCache","redCard","redCards","isTop","odds","index2","willBeLive","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_home_mHome__WEBPACK_IMPORTED_MODULE_1__","MLive"],"mappings":"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","file":"static/js/11.61668b6a.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffectOnce } from \"usehooks-ts\";\nimport {\n    MobileNavbar,\n    FootballLeagueNavbar,\n    SportsTypeNavbar,\n    MobileFooter,\n    LeagueContent,\n    OddDetailPanel,\n} from \"../../../mobile/components\";\nimport {\n    getMatches,\n    getAllMatches,\n    getTopLeague,\n    getLeagueSorts,\n    getTypeList,\n} from \"../../../store/actions/mobileSportsActions\";\nimport { FadeInOut } from \"../../../utils\";\nimport { tipTypesList, leagueNameRadarId } from \"../../../utils/dataUtils\";\nimport \"./mHome.css\";\n\nfunction MHome(props) {\n    const dispatch = useDispatch();\n    const prevScrollY = useRef(0);\n    const [tipTypes, setTipTypes] = useState();\n    const [liveLeagueType, setLiveLeagueType] = useState([]);\n    const [willLeagueType, setWillLeagueType] = useState([]);\n    const [openOddDetailVal, setOpenOddDetailVal] = useState(false);\n    const [selectMatchId, setSelectMatchId] = useState();\n    const [selectMatchDate, setSelectMatchDate] = useState();\n    const [selectMatchTime, setSelectMatchTime] = useState();\n    const [hideSubNav, setHideSubNav] = useState(true);\n    const [timer, setTimer] = useState(null);\n    const [isMounted, setIsMounted] = useState(false);\n    const [liveMatches, setLiveMatches] = useState(null);\n    const [willMatches, setWillMatches] = useState(null);\n    const [liveBetRadarName, setLiveBetRadarName] = useState(null);\n    const [willBetRadarName, setWillBetRadarName] = useState(null);\n    const [onlyLive, setOnlyLive] = useState(false);\n\n    const [sportTypeId, setSportTypeId] = useState(1);\n    const [betradarCategoryId, setBetradarCategoryId] = useState(0);\n    const [leagueName, setLeagueName] = useState();\n    const [matchState, setMatchState] = useState(\"home\");\n    const [startIndex, setStartIndex] = useState(0);\n    const [orderByLeague, setOrderByLeague] = useState(false);\n\n    const get_Matches = useSelector(\n        (state) => state.mobileSportsReducers.getMatches\n    );\n    const SportTypeList = useSelector(\n        (state) => state.mobileSportsReducers.getTypeList\n    );\n    const dataFetch = () => {\n        let id = localStorage.getItem(\"sportTypeId\");\n        let betradarCategoryId1 = betradarCategoryId;\n        id = id === undefined ? 1 : id;\n        if (id !== '1') {\n            localStorage.setItem(\"leagueName\", '');\n        }\n        let leagueName = localStorage.getItem(\"leagueName\");\n        if (leagueName !== null || leagueName !== undefined)\n            betradarCategoryId1 = leagueNameRadarId[leagueName];\n        let obj = {\n            sportTypeId: id,\n            betradarCategoryId: betradarCategoryId1,\n            leagueName: leagueName,\n            matchState: matchState,\n            startIndex: startIndex,\n            orderByLeague: orderByLeague,\n        };\n        dispatch(getMatches(obj));\n        dispatch(getAllMatches());\n        dispatch(getTopLeague());\n        dispatch(getLeagueSorts());\n        dispatch(getTypeList());\n        clearTimeout(timer);\n        setTimer(setTimeout(dataFetch, 5000));\n    };\n    useEffect(() => {\n        if (!isMounted) {\n            dataFetch();\n            setIsMounted(true);\n        }\n    });\n    useEffectOnce(() => {\n        dataFetch();\n    });\n    const sportActiveFunc = (index) => {\n        setSportTypeId(index);\n        localStorage.setItem(\"sportTypeId\", index);\n    };\n    useEffect(() => {\n        let tempType1 = [];\n        let tempBetRadar1 = [];\n        let tempType2 = [];\n        let tempBetRadar2 = [];\n        if (get_Matches && get_Matches.length !== 0) {\n            let live_leagues = get_Matches.data.matches.filter(\n                (item) => item.betState.matchState >= 3\n            );\n            let will_leagues = get_Matches.data.matches.filter(\n                (item) => item.betState.matchState < 3\n            );\n            setLiveMatches(live_leagues);\n            setWillMatches(will_leagues);\n            live_leagues.forEach((item) => {\n                if (!tempType1.includes(item.match.league)) {\n                    tempType1.push(item.match.league);\n                    tempBetRadar1.push(item.match.betradarCategory.name)\n                }\n            });\n            will_leagues.forEach((item) => {\n                if (!tempType2.includes(item.match.league)) {\n                    tempType2.push(item.match.league);\n                    tempBetRadar2.push(item.match.betradarCategory.name)\n                }\n            });\n            setLiveLeagueType(tempType1);\n            setLiveBetRadarName(tempBetRadar1)\n            setWillLeagueType(tempType2);\n            setWillBetRadarName(tempBetRadar2);\n        }\n    }, [get_Matches]);\n    useEffect(() => {\n        if (props && props.onlyLive) {\n            setOnlyLive(props.onlyLive);\n        }\n    }, [props]);\n    useEffect(() => {\n        //football navbar with scroll\n        const handleScroll = () => {\n            const currentScrollY = window.scrollY;\n            if (prevScrollY.current < currentScrollY - 15 && hideSubNav) {\n                setHideSubNav(false);\n            }\n            if (prevScrollY.current > currentScrollY && !hideSubNav) {\n                setHideSubNav(true);\n            }\n            prevScrollY.current = currentScrollY;\n        };\n        window.addEventListener(\"scroll\", handleScroll, { passive: true });\n\n        return () => window.removeEventListener(\"scroll\", handleScroll);\n    }, [hideSubNav]);\n\n    const getTipTypes = (index) => {\n        setTipTypes(index);\n    };\n    const getLeagueName = (leagueName) => {\n        leagueName = leagueName.replaceAll(\" \", \"%20\");\n        if (localStorage.getItem('sportTypeId') === '1') {\n            localStorage.setItem(\"leagueName\", leagueName);\n            setLeagueName(leagueName);\n        }\n    };\n    const openDetailOdd = (index, id, date, time) => {\n        setOpenOddDetailVal(index);\n        setSelectMatchId(id);\n        setSelectMatchDate(date);\n        setSelectMatchTime(time);\n    };\n    const getTime = (param) => {\n        let timestamp = new Date(param.betState.timestamp).getTime();\n        let virtualStartTime = new Date(\n            param.betState.virtualStartTime\n        ).getTime();\n        let t;\n        if (virtualStartTime !== 0) {\n            t = (timestamp - virtualStartTime) / (60 * 1000);\n            t = Math.round(t + 0.96442) >= 0 ? Math.round(t + 0.96442) : 0;\n        } else {\n            const dateString = param.europeanStartTime;\n            const userOffset = new Date().getTimezoneOffset() / 60;\n            const localDate = new Date(dateString);\n            const utcDate = new Date(\n                localDate.getTime() - (userOffset + 1) * 60 * 60 * 1000\n            );\n            const h = new Date(utcDate).getHours();\n            const m =\n                new Date(utcDate).getMinutes() === 0\n                    ? \"00\"\n                    : new Date(utcDate).getMinutes();\n            t = h + \":\" + m;\n        }\n        return t;\n    };\n    const getDate = (param) => {\n        let date;\n        const dateString = param.europeanStartTime;\n        const userOffset = new Date().getTimezoneOffset() / 60;\n        const localDate = new Date(dateString);\n        const utcDate = new Date(\n            localDate.getTime() - (userOffset + 1) * 60 * 60 * 1000\n        );\n\n        const todayDay = new Date().getDate();\n        let matchDay = new Date(utcDate).getDate();\n        let matchMonth = new Date(utcDate).getMonth() + 1;\n        if (todayDay === matchDay) {\n            date = \"Today\";\n        }\n        if (matchDay === todayDay + 1) {\n            date = \"Tomorrow\";\n        }\n        if (matchDay > todayDay + 1) {\n            if (matchDay < 10) {\n                matchDay = '0' + matchDay\n            }\n            if (matchMonth < 10) {\n                matchMonth = '0' + matchMonth\n            }\n            date = matchDay + \".\" + matchMonth;\n        }\n        return date;\n    };\n    return (\n        <>\n            <MobileNavbar />\n            <SportsTypeNavbar\n                sportActiveFunc={(index) => sportActiveFunc(index)}\n            />\n            {sportTypeId === 1 && hideSubNav ? (\n                <FadeInOut show=\"true\" duration={400}>\n                    <FootballLeagueNavbar\n                        parentCallback={getTipTypes}\n                        tipTypes={getTipTypes}\n                        leagueName={getLeagueName}\n                    />\n                </FadeInOut>\n            ) : (\n                <></>\n            )}\n            <div\n                className={\n                    sportTypeId === 1 ? \"m_content custom-top\" : \"m_content\"\n                }\n            >\n                <div className=\"m_header\">\n                    <div className=\"odds\">\n                        {tipTypes !== undefined\n                            ? tipTypesList[tipTypes].map((item, index) => (\n                                <p key={index}>{item}</p>\n                            ))\n                            : null}\n                    </div>\n                </div>\n                <div className=\"m_body\">\n                    {liveLeagueType\n                        ? liveLeagueType.map((league, index1) => (\n                            <div key={index1}>\n                                <div className=\"league-content\">\n                                    {SportTypeList.map((item) =>\n                                        item.sportTypeId === sportTypeId\n                                            ? item.name\n                                            : null\n                                    )}/\n                                    {liveBetRadarName ? liveBetRadarName[index1] : null}\n                                    /{league}\n                                </div>\n                                {liveMatches.map((match, i) =>\n                                    league === match.match.league ? (\n                                        <div key={i}>\n                                            <LeagueContent\n                                                sportTypeId={sportTypeId}\n                                                tipTypes={tipTypes}\n                                                openDetailOdd={openDetailOdd}\n                                                matchId={match.id}\n                                                homeTeam={match.match.homeTeam}\n                                                awayTeam={match.match.awayTeam}\n                                                matchResults={match.matchResults}\n                                                score={match.scoreCache}\n                                                matchState={match.betState.matchState}\n                                                redCard={match.redCards}\n                                                betState={match.betState}\n                                                isTop={match.isTop}\n                                                odds={match.betState}\n                                                time={getTime(match)}\n                                                date={getDate(match)}\n                                            />\n                                        </div>\n                                    ) : null\n                                )}\n                            </div>\n                        ))\n                        : null}\n                    {!onlyLive && willLeagueType\n                        ? willLeagueType.map((league, index2) => (\n                            <div key={index2}>\n                                <div className=\"league-content\">\n                                    {SportTypeList.map((item) =>\n                                        item.sportTypeId === sportTypeId\n                                            ? item.name\n                                            : null\n                                    )}/\n                                    {willBetRadarName ? willBetRadarName[index2] : null}\n                                    /{league}\n                                </div>\n                                {willMatches.map((match, i) =>\n                                    league === match.match.league ? (\n                                        <div key={i}>\n                                            <LeagueContent\n                                                sportTypeId={sportTypeId}\n                                                tipTypes={tipTypes}\n                                                openDetailOdd={openDetailOdd}\n                                                matchId={match.id}\n                                                homeTeam={match.match.homeTeam}\n                                                awayTeam={match.match.awayTeam}\n                                                matchResults={match.matchResults}\n                                                score={match.scoreCache}\n                                                redCard={match.redCards}\n                                                betState={match.betState}\n                                                willBeLive={match.match.willBeLive}\n                                                matchState={match.betState.matchState}\n                                                isTop={match.isTop}\n                                                time={getTime(match)}\n                                                date={getDate(match)}\n                                            />\n                                        </div>\n                                    ) : null\n                                )}\n                            </div>\n                        ))\n                        : null}\n                </div>\n            </div>\n            <MobileFooter />\n            {openOddDetailVal ? (\n                <OddDetailPanel\n                    openDetailOdd={openDetailOdd}\n                    matchId={selectMatchId}\n                    date={selectMatchDate}\n                    time={selectMatchTime}\n                />\n            ) : (\n                <></>\n            )}\n        </>\n    );\n}\nexport default MHome;\n","import React from 'react';\nimport MHome from '../home/mHome'\n\nfunction MLive() {\n    return (\n        <MHome onlyLive={true}/>\n    );\n};\nexport default MLive;"],"sourceRoot":""}